version: '3.8'

volumes:
  puma-sock:

services:
  db:
    image: postgres:12.3-alpine
    environment:
      TZ: UTC
      PGTZ: UTC
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - ./docker/db/tmp/db:/var/lib/postgresql/data

  api:
    stdin_open: true
    tty: true
    build:
      context: ./
      dockerfile: docker/api/Dockerfile
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec puma -e development"
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      API_DOMAIN: "localhost:$FRONT_PORT"
      BASE_URL: "http://localhost:$API_PORT"
    volumes:
      - type: bind
        source: ./backend
        target: /var/www
      - type: volume
        source: puma-sock
        target: /var/www/tmp/sockets/
    depends_on:
      - db
    ports:
      - "$API_PORT:$CONTAINER_PORT"

  front:
    build:
      context: ./
      dockerfile: docker/front/Dockerfile
      args:
        WORKDIR: $WORKDIR
        CONTAINER_PORT: $CONTAINER_PORT
        API_URL: "http://localhost"
    command: yarn run dev
    volumes:
      - ./frontend:/$WORKDIR
    depends_on:
      - api
    ports:
      - "$FRONT_PORT:$CONTAINER_PORT"

  web:
    build:
      context: ./
      dockerfile: docker/web/Dockerfile
    ports:
      - "$WEB_PORT:80"
    volumes:
      - type: bind
        source: ./backend/public
        target: /var/www/public
      - type: volume
        source: puma-sock
        target: /var/www/tmp/sockets
        volume:
          nocopy: true
    depends_on:
      - api

  pgadmin4:
    image: dpage/pgadmin4
    environment:
        PGADMIN_DEFAULT_EMAIL: xxxxxxxxxx@gmail.com
        PGADMIN_DEFAULT_PASSWORD: password
    ports:
        - 8081:80
    depends_on:
      - db
